.\" vim: ft=groff
.\" Manpage for sterm.
.TH sterm 1 "16 September 2016" "16102015"
.SH NAME
sterm \- simple serial terminal
.SH SYNOPSIS
sterm [OPTION]... DEVICE
.SH DESCRIPTION
.PP
sterm is simple program for communication over serial line. It can be
used in scripts or directly as interactive terminal. It also allows to
control DTR and RTS signals with command line options.
.PP
In interactive mode all keys (including '^C') are sent trough the
serial connection. To exit the program there is a special key
sequence: '<Enter>~.'
.SH OPTIONS
.TP
\fB\-b <duration>\fR
Send break signal of given DURATION after opening the DEVICE. See
tcsendbreak(3) for definition of duration.
.TP
\fB\-c\fR
Enter command mode. See COMMAND MODE section below.
.TP
\fB\-d[PULSE]\fR
Make pulse on DTR. The PULSE parameter (see below) specifies the
length of the pulse and its polarity.
.TP
\fB\-e\fR
Ignore '~.' escape sequence. Be aware that this locks your terminal to
sterm, the only way to exit sterm is to kill it from other
terminal. This can be desirable in scripts, specially if you are
sending binary data through serial connection.
.TP
\fB\-n\fR
Don't switch user's terminal to raw mode. This is useful if you want
to use '^C' to exit sterm or to use line buffering/editing features of
TTYs.
.TP
\fB\-r[PULSE]\fR
Make pulse on RTS. The PULSE parameter (see below) specifies the
length of the pulse and its polarity.
.TP
\fB\-s <baudrate>\fR
Set serial like baudrate to the given value. Here are few common
values: 4800, 9600, 19200, 115200. For full list of supported
baudrates see source files or test what is acceptable.
.TP
\fB\-t <ms>\fR
Enforce minimum delay of MS milliseconds between transmitting any two
characters to the serial line. This is useful when talking to devices,
which loose characters sent at full speed, e.g. after copy&paste
operation.

.TP
\fB\-v\fR
Be verbose.
.SH PULSE

Options \fB\-d\fR and \fB\-r\fR take an optional argument PULSE that
specifies pulse length and polarity. PULSE can be one of the
following:

a number
.RS
Absolute value of the number specifies the length of the pulse in
milliseconds and sign, which can be either '+' or '-', corresponds to
positive or negative polarity.
.RE

\'+' or '-'
.RS
This corresponds to +1 and -1.
.RE

empty
.RS
This corresponds -1.
.RE

.SH COMMAND MODE
Command mode allows you to generate arbitrary combinations of pulses
on DTR and RTS signals. The commands are read from standard input and
are white-space separated. The following commands are understood.

.I dtr PULSE
.RS
Generate a pulse on DTR. The PULSE argument is described in PULSE
section.
.RE
.I rts PULSE
.RS
Generate a pulse on RTS. The PULSE argument is described in PULSE
section.
.RE
.I break DURATION
.RS
Send break signal of given duration. See
.BR tcsendbreak (3).
.RE
.I exit
.RS
Exit sterm.
.RE
.I go
.RS
Exit command mode and enter normal sterm operation.
.RE

Any other input in the command mode raises an error and causes the
program to exit.

.SH BUGS
No known bugs.

.SH SEE ALSO
.BR minicom (1),
.BR cu (1),
.BR gtkterm (1).
.SH AUTHOR
Michal Sojka (sojkam1@fel.cvut.cz)
